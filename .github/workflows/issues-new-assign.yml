# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : allows you to auto assign labels to new issues and pull requests
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
#
#   requires the following labels to be created in your repo:
#     - bug
#     - feature
#     - urgent
#     - roadmap
# ---------------------------------------------------------------------------------------

name: "🎫 Issue › New › Assignment"
run-name: "🎫 Issue › New › Assignment - ${{ github.event.issue.number }}: ${{ github.event.issue.title }}"

# ---------------------------------------------------------------------------------------
#   triggers
# ---------------------------------------------------------------------------------------

on:
  issues:
    types:
      - reopened
      - opened

# ---------------------------------------------------------------------------------------
#   environment variables
# ---------------------------------------------------------------------------------------

env:
  PREFIX_BUG:           "Bug"
  PREFIX_FEATURE:       "Feature"
  PREFIX_ROADMAP:       "Roadmap"
  PREFIX_DEPENDENCY:    "Dependency"
  PREFIX_PR:            "PR"
  PREFIX_DOCS:          "Docs"
  PREFIX_GIT:           "Git Action"
  PREFIX_URGENT:        "Urgent"

  LABEL_BUG:            "Type ⇴ Bug"
  LABEL_FEATURE:        "Type ⇴ Feature"
  LABEL_ROADMAP:        "Type ⇴ Roadmap"
  LABEL_DEPENDENCY:     "Type ⇴ Dependency"
  LABEL_PR:             "Type ⇴ PR"
  LABEL_DOCS:           "Type ⇴ Docs"
  LABEL_GIT:            "Type ⇴ Git Action"
  LABEL_URGENT:         "⚠ Urgent"

  ASSIGN_USER:          Aetherinox
  BOT_NAME_1:           AdminServ
  BOT_NAME_2:           AdminServX
  BOT_NAME_DEPENDABOT:  dependabot[bot]

  LABELS_JSON: |
    [
      { "name": "Type ⇴ Bug", "color": "d73a4a", "description": "Something isn't working" },
      { "name": "Type ⇴ Feature", "color": "36552B", "description": "Feature request" },
      { "name": "Type ⇴ Urgent", "color": "ccb11d", "description": "This issue required priority." },
      { "name": "Type ⇴ Roadmap", "color": "8F1784", "description": "Feature or bug currently planned for implementation." }
    ]

jobs:

  # ---------------------------------------------------------------------------------------
  #   Verify Existing Labels
  #   This job will ensure you have labels already created in your repo.
  #
  #   All labels come from the JSON table LABELS_JSON.
  # ---------------------------------------------------------------------------------------

  issues-preconfig-labels:
    name: ⚙️ Labels › Preconfigure
    runs-on: ubuntu-latest
    steps:

      - name: "✅ Start"
        run: | 
              echo "Assigning labels and assignees"

      - name: "☑️ Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------------------------------------------------------
      #   Check if repo has labels currently added to issues
      # ---------------------------------------------------------------------------------------
        
      - name: 🏷️ Verify Existing Labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = JSON.parse( process.env.LABELS_JSON );
            for ( const label of labels )
            {
                try
                {
                    await github.rest.issues.createLabel(
                    {
                        owner:        context.repo.owner,
                        repo:         context.repo.repo,
                        name:         label.name,
                        description:  label.description || '',
                        color:        label.color
                    });
                }
                catch ( err )
                {
                    if ( err.status === 422 )
                    {
                        console.log( `Label '${label.name}' already exists. Skipping.` );
                    }
                    else
                    {
                        console.error( `Error creating label '${label.name}': ${err}` );
                    }
                }
            }

  # ---------------------------------------------------------------------------------------
  #   Issues > Assign Labels
  # ---------------------------------------------------------------------------------------

  issues-assign-labels:
    name: >-
      🏷️ Labels › Assign
    needs:
    - issues-preconfig-labels
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write'
    environment:
      name: Orion
    steps:

      # ---------------------------------------------------------------------------------------
      #   Label > Bug
      # ---------------------------------------------------------------------------------------

      - name: 🏷️ ${{ env.PREFIX_BUG }} › Assignment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            const issueLabels = await github.rest.issues.listLabelsOnIssue(
            {
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                issue_number:     context.issue.number
            });

            let add_labels              = issueLabels.data.map( label => label.name );

            let iss_title               = `${ context.payload.issue.title }`;
            let iss_body                = `${ context.payload.issue.body }`;
            const iss_tag               = `${{ env.PREFIX_BUG }}`;

            const iss_title_lc          = iss_title.toLowerCase( );

            /*
                Tags
            */

            const bug_tag               = `${{ env.PREFIX_BUG }}`;
            const bug_lbl               = `${{ env.LABEL_BUG }}`;
            const feat_tag              = `${{ env.PREFIX_FEATURE }}`;
            const feat_lbl              = `${{ env.LABEL_FEATURE }}`;
            const urgn_tag              = `${{ env.PREFIX_URGENT }}`;
            const urgn_lbl              = `${{ env.LABEL_URGENT }}`;
            const road_tag              = `${{ env.PREFIX_ROADMAP }}`;
            const road_lbl              = `${{ env.LABEL_ROADMAP }}`;

            /*
                Bugs
            */

            const bug_words             = [ "bug", "broke", "issue", "fail" ];
            const bug_bIncWordT         = bug_words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

            /*
                found searched word "for help"
                    append / prepare message for bot to send
            */

            const bug_findWordList 	      = /(?:I?\s*have\s*(?:a|an)\s*(?:issue|problem|bug))|(?:will\s*not\s*work)|(?:it\s*is\s*(?:broken|broke|stuck))|(?:found\s*(?:an?|the)\s*(?:bug|issue))|(?:can\s*I\s*fix\s*the\s*(?:bug|issue))|(?:(?:does not|doesn'?t|don'?t|won'?t|can'?t|can\s?not|will\s*not)\s*(?:work|load|function))|(?:it\s*(?:will\s?not|won'?t|can\s?not|can'?t))\s*get\s*the\s*(?:website|site|webpage|page)|(?:the\s*(?:window|frame)\s*is\s*(?:blank|white|empty|missing))/ig;
            const bug_bFoundMatchTitle    = Boolean( bug_findWordList.test( iss_title ) );
            const bug_bFoundMatchBody     = Boolean( bug_findWordList.test( iss_body ) );

            /*
                - Check if issue title matches the issue label "Bug:"
                - Check if title contains word in bug_words 
            */

            if ( iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) || bug_bIncWordT || bug_bFoundMatchTitle || bug_bFoundMatchBody )
            {

                add_labels.push( `${ bug_lbl }` );

                // Rename title to contain Bug:
                if ( !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                {
                    const title           = context.payload.issue.title
                    let title_new         = title.replace( /^\s?bug\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?fail\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?issue\s*(.*?)\b/gi, '' );
                    iss_title             = `${ bug_tag }: ${ title_new }`;
                }

                await github.rest.issues.update(
                {
                    owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                    title: `${ iss_title }`, labels: add_labels
                } );
            }

  # ---------------------------------------------------------------------------------------
  #   Issues > Add Assignees
  # ---------------------------------------------------------------------------------------

  issues-assign-assignees:
    name: >-
      ✍️ Issue › Assign
    runs-on: ubuntu-latest
    needs: [ issues-assign-labels ]
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
    permissions:
      contents: write
    steps:

      - name: ✍️ Set Assignees
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |
            const assignees = [ 'Aetherinox' ];

            if ( assignees.length > 0 )
            {
                try
                {
                    await github.rest.issues.addAssignees(
                    {
                        issue_number:   context.issue.number,
                        owner:          context.repo.owner,
                        repo:           context.repo.repo,
                        assignees
                    });
                }
                catch ( error )
                {
                    core.setFailed( error.message );
                }
            }
  