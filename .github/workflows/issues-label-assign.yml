# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : allows you to auto assign labels to new issues and pull requests
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
#
#   requires the following labels to be created in your repo:
#     - bug
#     - feature
#     - urgent
#     - roadmap
# ---------------------------------------------------------------------------------------

  name: "Issues: Assign Label"
  run-name: "New Issue: Assign Label - ${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
  
  on:
    issues:
      types:
        - reopened
        - opened
  
  env:
    LABEL_BUG:      Bug
    LABEL_FEATURE:  Feature
    LABEL_URGENT:   Urgent
    LABEL_ROADMAP:  Roadmap
    ASSIGN_USER:    Aetherinox
    BOT_NAME_1:     AdminServ
    BOT_NAME_2:     AdminServX
    LABELS_JSON: |
      [
        { "name": "Bug", "color": "d73a4a", "description": "Something isn't working" },
        { "name": "Feature", "color": "36552B", "description": "Feature request" },
        { "name": "Urgent", "color": "ccb11d", "description": "This issue required priority." },
        { "name": "Roadmap", "color": "8F1784", "description": "Feature or bug currently planned for implementation." }
      ]
  
  
  jobs:
  
    # ---------------------------------------------------------------------------------------
    #   Verify Existing Labels
    #   This job will ensure you have labels already created in your repo.
    #
    #   All labels come from the JSON table LABELS_JSON.
    # ---------------------------------------------------------------------------------------
  
    Submission_Labels_Verify:
      name: "Labels: Verify"
      runs-on: ubuntu-latest
      permissions: write-all
      steps:
  
        - name: Checkout
          uses: actions/checkout@v3

        # ---------------------------------------------------------------------------------------
        #   Check if repo has labels currently added to issues
        # ---------------------------------------------------------------------------------------
          
        - name: Verify Existing Labels
          uses: actions/github-script@v7
          with:
            script: |
              const labels = JSON.parse( process.env.LABELS_JSON );
              for ( const label of labels )
              {
                  try
                  {
                      await github.rest.issues.createLabel(
                      {
                          owner:        context.repo.owner,
                          repo:         context.repo.repo,
                          name:         label.name,
                          description:  label.description || '',
                          color:        label.color
                      });
                  }
                  catch ( err )
                  {
                      // label already exists
                      if ( err.status === 422 )
                      {
                          console.log( `Label '${label.name}' already exists. Skipping.` );
                      }
                      else
                      {
                          // Log other errors
                          console.error( `Error creating label '${label.name}': ${err}` );
                      }
                  }
              }
  
    # ---------------------------------------------------------------------------------------
    #   Check Label: BUG
    #
    #   check issue title and body for specific terms and assign label
    # ---------------------------------------------------------------------------------------
  
    Submission-Label-Bug:
      name:  "Bug › Label"
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'
        issues: 'write'
      steps:
  
        - name: ${{ env.LABEL_BUG }} › Assignment
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
            script: |
              const iss_body            = `${ context.payload.issue.body }`;
              const iss_title           = `${ context.payload.issue.title }`;
              const iss_title_append    = `${{ env.LABEL_BUG }}:`;
              const add_labels          = [];

              const words_Bug =
              [
                "bug",
                "broke",
                "fails",
                "failed",
              ];

              const bIncludesBug  = words_Bug.some( s => s.includes( title ) || title.includes( s ) );

              /*
                  - title starts with Bug:
                  - title contains a word within words_Bug
              */

              if ( iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) || bIncludesBug )
              {
                  add_labels.push( "${{ env.LABEL_BUG }}" );
              }

              /*
                  Rename title to contain Bug:
              */

              if ( !iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) )
              {
                  add_labels.push( "${{ env.LABEL_BUG }}" );

                  const title           = context.payload.issue.title
                  let title_new         = title.replace( /\bbug\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );

                  await github.rest.issues.update(
                  {
                      owner:            context.repo.owner,
                      repo:             context.repo.repo,
                      issue_number:     context.issue.number,
                      title:            `${ iss_title_append } ${ title_new }`,
                  } );
              }

              /*
                  Add Label
              */

              await github.rest.issues.update(
              {
                  owner:          context.repo.owner,
                  repo:           context.repo.repo,
                  issue_number:   context.issue.number,
                  add_labels,
              } );

    # ---------------------------------------------------------------------------------------
    #   Check Label: Roadmap
    #
    #   check issue title and body for specific terms and assign label
    # ---------------------------------------------------------------------------------------
  
    Submission-Label-Urgent:
      name:  "Urgent › Label"
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'
        issues: 'write'
      steps:
  
        - name: ${{ env.LABEL_URGENT }} › Assignment
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
            script: |
              const iss_body            = `${ context.payload.issue.body }`;
              const iss_title           = `${ context.payload.issue.title }`;
              const iss_title_append    = `${{ env.LABEL_URGENT }}:`;
              const add_labels          = [];

              const words_Urgent =
              [
                "urgent",
                "urgency",
                "emergency",
                "important",
                "critical",
              ];

              const bIncludesUrgent  = words_Urgent.some( s => s.includes( title ) || title.includes( s ) );

              /*
                  - title starts with Urgent:
                  - title starts with words_Urgent list
              */

              if ( iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) || bIncludesUrgent )
              {
                  add_labels.push( "${{ env.LABEL_URGENT }}" );
              }

              /*
                  Rename title to contain Urgent:
              */

              if ( !iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) )
              {
                  add_labels.push( "${{ env.LABEL_URGENT }}" );

                  const title           = context.payload.issue.title
                  let title_new         = title.replace( /\bemergency\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );
                  title_new             = title.replace( /\burgent\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );
                  title_new             = title.replace( /\burgency\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );
                  title_new             = title.replace( /\bimportant\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );
                  title_new             = title.replace( /\bcritical\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );

                  await github.rest.issues.update(
                  {
                      owner:            context.repo.owner,
                      repo:             context.repo.repo,
                      issue_number:     context.issue.number,
                      title:            `${ iss_title_append } ${ title_new }`,
                  } );
              }

              /*
                  Add Label
              */

              await github.rest.issues.update(
              {
                  owner:          context.repo.owner,
                  repo:           context.repo.repo,
                  issue_number:   context.issue.number,
                  add_labels,
              } );

        # ---------------------------------------------------------------------------------------
        #   Check Title
        #
        #   this job checks to see if a new issue has certain keywords in the title and body
        #   and also if the beginning of the title starts with "bug"
        #
        #   if not, re-name the issue in the format of
        #       Bug: Title Name
        # ---------------------------------------------------------------------------------------

    Submission-Label-Roadmap:
      name:  "Urgent › Label"
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'
        issues: 'write'
      steps:

        - name: ${{ env.LABEL_ROADMAP }} › Assignment
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
            script: |
              const iss_body            = `${ context.payload.issue.body }`;
              const iss_title           = `${ context.payload.issue.title }`;
              const iss_title_append    = `${{ env.LABEL_ROADMAP }}:`;
              const add_labels          = [];

              /*
                  - title starts with Roadmap:
                  - title starts with planned
                  - title starts with road map
              */

              if ( iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) || iss_title.toLowerCase( ).startsWith( "planned" ) || iss_title.toLowerCase( ).startsWith( "road map" ) )
              {
                  add_labels.push( "${{ env.LABEL_ROADMAP }}" );
              }

              /*
                  Rename title to contain Roadmap:
              */

              if ( !iss_title.toLowerCase( ).startsWith( iss_title_append.toLowerCase( ) ) )
              {
                  add_labels.push( "${{ env.LABEL_ROADMAP }}" );

                  const title           = context.payload.issue.title
                  const title_new       = title.replace( /\broad map\s*?:[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*]*\s\b/gi, '' );

                  await github.rest.issues.update(
                  {
                      owner:            context.repo.owner,
                      repo:             context.repo.repo,
                      issue_number:     context.issue.number,
                      title:            `${ iss_title_append } ${ title_new }`,
                  } );
              }

              /*
                  Add Label
              */

              await github.rest.issues.update(
              {
                  owner:          context.repo.owner,
                  repo:           context.repo.repo,
                  issue_number:   context.issue.number,
                  add_labels,
              } );
