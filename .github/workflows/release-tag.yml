# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : push release (tag)
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
# ---------------------------------------------------------------------------------------

name: "Release Product"
run-name: "Release Product"

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: "Release Candidate"
        required: true
        default: false
        type: boolean
      rc_version:
        description: "RC Version"
        required: false
        type: string
        default: 1
env:
    PLUGIN_NAME: gistr
jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
          contents: write
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js
              uses: actions/setup-node@v1
              id: checkout
              with:
                  node-version: "20.x"

            # ---------------------------------------------------------------------------------------
            #   Get version from package.json VERSION value
            # ---------------------------------------------------------------------------------------
            - name: Get Package Version
              id: get_package_version
              run: echo "PACKAGE_VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV

            # ---------------------------------------------------------------------------------------
            #   Build ( Release Candidate )
            # ---------------------------------------------------------------------------------------

            - name: previous tag
              run: |
                echo "TAG_PREVIOUS=$(git ls-remote remote 'refs/tags/v*[0-9]' | cut -f 2- | sort -V | tail -1)" >> $GITHUB_ENV
                echo "Found Previous Tag: ${{ env.TAG_PREVIOUS }}"


            - name: Build (Release Candidate)
              id: dev
              if: ${{ startsWith( inputs.prerelease, true ) }}
              run: |
                echo "-------------"
                  echo ${{ env.previous_tag }}
                echo "-------------"

